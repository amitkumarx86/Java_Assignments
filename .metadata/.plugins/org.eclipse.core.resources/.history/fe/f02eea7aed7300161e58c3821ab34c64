package Trees;

public class TreeMethods {
    static int levelCount=-1;
    int treeHeight(Node head){
	if(head == null)
	    return 0;
	if(head.right == null && head.left==null)
	    return 0;
	
	return Math.max(treeHeight(head.left),treeHeight(head.right))+1;
    }
    void treeLevel(Node node,int l){
	if (node == null)
            return ;
   
        /* first print the data of node */
	node.level=l;
        System.out.print(node.data + " ");   
        /* then recur on left child */
        //levelCount++;
        System.out.println(node.level);
        treeLevel(node.left,1+l);
        /* and recur on right child */
        treeLevel(node.right,1+l);
        
    }
    void spiralTraversal(Node node){
	if(node == null)
	    return ;
	System.out.print(node.data + " "); 
	if(node.level%2==0){
	    spiralTraversal(node.left);
	    spiralTraversal(node.right);
	}
	else{
	    spiralTraversal(node.right);
	    spiralTraversal(node.left);
	}
    }
}
