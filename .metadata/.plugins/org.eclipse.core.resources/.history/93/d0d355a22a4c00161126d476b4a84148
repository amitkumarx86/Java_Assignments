package Algorithms;

import java.io.*;
import java.util.*;

public class BeautifulPairs {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
	         
		    ArrayList<Integer> A = new ArrayList<Integer>();
    		ArrayList<Integer> B = new ArrayList<Integer>();
             
		    Scanner reader = new Scanner(System.in);
	        int n = reader.nextInt();
	         
	        for(int i =0; i< n; i++){
	        	A.add(reader.nextInt());
	        }
	        for(int i =0; i< n; i++){
	        	B.add(reader.nextInt());
	        }
	        
            
		 	//Arrays.sort(A);
            //Arrays.sort(B);
	        
            List<Integer> C = new ArrayList<Integer>(B);
            System.out.println(C);
	        int count =0;
	        for(int i=0; i< A.size() ; i++){
	        	for(Integer b: B){
	        		if(A.get(i) == b){
		        		count++;
		        		C.remove(b);
		        	}
	        	}
	        }
	        if(C.size() == 0)
	        	System.out.println(count--);
	        else
	        	System.out.println(count++);
	        /*
		 	//Arrays.sort(A);
            //Arrays.sort(B);
	        int count =0;
	        for(int i=0; i< A.size() ; i++){
	        	for(int j=0; i< B.size() ; j++){
		        	if(A.get(i) == B.get(j)){
		        		count++;
		        		B.remove(j);
		        	}
		        }
	        }
	        if(B.size() == 0)
	        	System.out.println(count--);
	        else
	        	System.out.println(count++);
	        
		 	//Arrays.sort(A);
            //Arrays.sort(B);
	        B[B.length-1] = A[A.length-1];
	        int count=0;
	        int ix = 0;
	        int iy=0, flag=0;
	        Map<Integer, Integer> m= new HashMap<>();
	        for(int i =0; i< n; i++){
	        	for(int j = 0; j< n;j++){
	        		if(A[i] == B[j]){
                        count++;
	        			//System.out.println("Pair = "+" "+ i + ", "+ j);
	        			for(Map.Entry<Integer,Integer> m1: m.entrySet()){
	        				if(m1.getValue() == j){
	        					flag=1;
	        				}
	        			}
	        			if(flag != 1){
	        				m.put(i,j);
	        				
		        			
	        			}
	        			flag=0;
	        			
	        		}
	        	}
	        }
	        //System.out.println(count);
	          System.out.println(m.size());
            */
            
	        
    }
}