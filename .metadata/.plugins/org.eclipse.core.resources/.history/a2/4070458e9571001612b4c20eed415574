package sorting;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Random;

public class BucketSort
{
    public static void sort(int[] array) {
	int N = array.length;
	if( N <= 0 )
	      return;                                   // Case of empty array

	    int min = array[0];
	    int max = min;
	    for( int i = 1; i < N; i++ )                // Find the minimum and maximum
	      if( array[i] > max )
	        max = array[i];
	      else if( array[i] < min )
	        min = array[i];

	    int bucket[] = new int[max-min+1];          // Create buckets
	    
	    for( int i = 0; i < N; i++ )                // "Fill" buckets
	      bucket[array[i]-min]++;                   // by counting each datum

	    printSequence(bucket);
	    int i = 0;                                  
	    for( int b = 0; b < bucket.length; b++ )    // "Empty" buckets
	      for( int j = 0; j < bucket[b]; j++ )      // back into array
	        array[i++] = b+min;        
    }
 
    static void printSequence(int[] sorted_sequence) 
    {
        for (int i = 0; i < sorted_sequence.length; i++)
            System.out.print(sorted_sequence[i] + " ");
    }
 
    static int maxValue(int[] sequence) 
    {
        int maxValue = 0;
        for (int i = 0; i < sequence.length; i++)
            if (sequence[i] > maxValue)
                maxValue = sequence[i];
        return maxValue;
    }
 
    public static void main(String args[]) 
    {
        Random random = new Random();
        int N = 20;
        int[] sequence = new int[N];
 
        for (int i = 0; i < N; i++)
            sequence[i] = Math.abs(random.nextInt(100));
 
        //int maxValue = maxValue(sequence);
 
        System.out.println("\nOriginal Sequence: ");
        printSequence(sequence);
 
        System.out.println("\nSorted Sequence: ");
        sort(sequence);
        printSequence(sequence);
    }
}

