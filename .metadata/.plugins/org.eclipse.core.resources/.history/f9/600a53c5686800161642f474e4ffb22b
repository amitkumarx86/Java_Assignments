package QuickSort;

 
public class RandMizedQuickSortVersion1 {
    
    
    public void qSort(int[] a, int l, int r)
    {
         if(l<r){
            int p = Pivot(l,r);
            //int k = Partition(a,l,r,p);
            int k = FindRank(a,l,r,(r-l)/2);
            qSort(a, l, k);
            qSort(a, k+1, r);
         }
     }
     public int FindRank(int[] a,int i, int j, int r){
	 int p = Pivot(i,j);
	 System.out.println("p="+p);
	 int k = Partition(a, i, j, p);
	 if( r == k)
	     return p;
	 else if(r < j-k+1)
	     FindRank(a, k+1, j, r);
	 else
	     FindRank(a, i, k, r-j+k);
	 return p;
     }
     private  int Pivot(int minimum,int maximum){
	return (minimum + (int)(Math.random()*(maximum - minimum))); 
     }
     
     private  int Partition(int[] a, int l, int r,int p)
     {
	 a[r] = a[p] + a[r] - (a[p]=a[r]);
         int x = a[r];
         int i = l-1;
         for(int j=l; j<=r-1; j++)
         {
             if(a[j]<=x) // use if(a[j] >=x) for non-increasing order 
             {
                 i++;a[j]=a[i]+a[j]-(a[i]=a[j]);
             }	
         }
         a[i+1] = a[r] + a[i+1] - (a[r] = a[i+1]);
         return (++i);
     }
     public  int PartitionForPivotAtIndexZero(int[] a, int p, int r)
     {
	 System.out.println("func called...");
         int x = a[0];
         int i = r+1;
         System.out.println(" i ="+(i));
         int temp=0;
         for(int j=r; j > 0; j--)
         {
             if(a[j] >= x) // use if(a[j] >=x) for non-increasing order 
             {
                 i--;
                 temp = a[i];
                 a[i] = a[j];
                 a[j] = temp;
                     
             }
         }
         temp = a[i-1];
         a[i-1] = a[0];
         a[0] = temp;
         for(int a1: a)
             System.out.print(a1+" ");
         System.out.println();
         System.out.println(" i ="+(--i));
         return (i);
     }
     
     public static void main(String[] args)
     {
         RandMizedQuickSortVersion1 qsort = new RandMizedQuickSortVersion1();
         int[] array = {5, 4, 7, 2, 1, 9, 3, 6 ,8,10};

         System.out.print("Original  Array : ");
         for(int i=0; i<array.length;i++)
         {
             System.out.print(array[i] + " ");
         }
         System.out.println();
         int length = array.length;
         
         qsort.qSort(array, 0, length-1);
         System.out.println();
         System.out.print("Sorted  Array : ");
         for(int i=0; i<array.length;i++)
         {
             System.out.print(array[i] + " ");
         }
     }
}
